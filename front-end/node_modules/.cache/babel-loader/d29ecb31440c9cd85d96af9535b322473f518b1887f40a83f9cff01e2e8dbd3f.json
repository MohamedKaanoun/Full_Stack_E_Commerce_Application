{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../../config/ApiConfig\";\nimport { GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\nimport { useNavigate } from \"react-router-dom\";\nconst navigate = useNavigate();\nconst registerRequest = () => ({\n  type: REGISTER_REQUEST\n});\nconst registerSuccess = user => ({\n  type: REGISTER_SUCCESS,\n  payload: user\n});\nconst registerFailure = error => ({\n  type: REGISTER_FAILURE,\n  payload: error\n});\nexport const register = userData => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post(API_BASE_URL + \"auth/register\", userData);\n    const user = response.data;\n    dispatch(registerSuccess(user));\n    navigate;\n  } catch (error) {\n    dispatch(registerFailure(error.message));\n  }\n};\nconst loginRequest = () => ({\n  type: LOGIN_REQUEST\n});\nconst loginSuccess = user => ({\n  type: LOGIN_SUCCESS,\n  payload: user\n});\nconst loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const login = userData => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post(API_BASE_URL + \"auth/authenticate\", userData);\n    const jwt = response.data.token; // Assuming the response contains a 'token' field\n    if (!jwt) {\n      throw new Error(\"JWT token not found in response\");\n    }\n    localStorage.setItem(\"jwt\", jwt);\n    const userResponse = await axios.get(API_BASE_URL + \"users/profile\", {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    const user = userResponse.data;\n    console.log(user);\n    dispatch(loginSuccess(user));\n    return {\n      payload: user\n    };\n  } catch (error) {\n    dispatch(loginFailure(error.message));\n    return {\n      error: error.message\n    };\n  }\n};\nconst getUserRequest = () => ({\n  type: GET_USER_REQUEST\n});\nconst getUserSuccess = user => ({\n  type: GET_USER_SUCCESS,\n  payload: user\n});\nconst getUserFailure = error => ({\n  type: GET_USER_FAILURE,\n  payload: error\n});\nexport const getUser = jwt => async dispatch => {\n  dispatch(getUserRequest());\n  try {\n    const response = await axios.get(API_BASE_URL + \"users/profile\", {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    const user = response.data;\n    dispatch(getUserSuccess(user));\n  } catch (error) {\n    dispatch(getUserFailure(error.message));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT,\n    payload: null\n  });\n  localStorage.clear();\n};","map":{"version":3,"names":["axios","API_BASE_URL","GET_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","useNavigate","navigate","registerRequest","type","registerSuccess","user","payload","registerFailure","error","register","userData","dispatch","response","post","data","message","loginRequest","loginSuccess","loginFailure","login","jwt","token","Error","localStorage","setItem","userResponse","get","headers","Authorization","console","log","getUserRequest","getUserSuccess","getUserFailure","getUser","logout","clear"],"sources":["C:/Users/Mohamed Kaanoun/Documents/WEB/E-commerce/front-end/src/State/Auth/Action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_BASE_URL } from \"../../config/ApiConfig\";\r\nimport {\r\n  GET_USER_FAILURE,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_FAILURE,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n} from \"./ActionType\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst navigate = useNavigate();\r\nconst registerRequest = () => ({ type: REGISTER_REQUEST });\r\nconst registerSuccess = (user) => ({ type: REGISTER_SUCCESS, payload: user });\r\nconst registerFailure = (error) => ({ type: REGISTER_FAILURE, payload: error });\r\n\r\nexport const register = (userData) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(API_BASE_URL + \"auth/register\", userData);\r\n    const user = response.data;\r\n    dispatch(registerSuccess(user));\r\n    navigate\r\n  } catch (error) {\r\n    dispatch(registerFailure(error.message));\r\n  }\r\n};\r\n\r\nconst loginRequest = () => ({ type: LOGIN_REQUEST });\r\nconst loginSuccess = (user) => ({ type: LOGIN_SUCCESS, payload: user });\r\nconst loginFailure = (error) => ({ type: LOGIN_FAILURE, payload: error });\r\n\r\nexport const login = (userData) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"auth/authenticate\",\r\n      userData\r\n    );\r\n    const jwt = response.data.token; // Assuming the response contains a 'token' field\r\n    if (!jwt) {\r\n      throw new Error(\"JWT token not found in response\");\r\n    }\r\n    localStorage.setItem(\"jwt\", jwt);\r\n    const userResponse = await axios.get(API_BASE_URL + \"users/profile\", {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n    });\r\n    const user = userResponse.data;\r\n    console.log(user);\r\n    dispatch(loginSuccess(user));\r\n    return { payload: user };\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.message));\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nconst getUserRequest = () => ({ type: GET_USER_REQUEST });\r\nconst getUserSuccess = (user) => ({ type: GET_USER_SUCCESS, payload: user });\r\nconst getUserFailure = (error) => ({ type: GET_USER_FAILURE, payload: error });\r\n\r\nexport const getUser = (jwt) => async (dispatch) => {\r\n  dispatch(getUserRequest());\r\n  try {\r\n    const response = await axios.get(API_BASE_URL + \"users/profile\", {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n    });\r\n    const user = response.data;\r\n    dispatch(getUserSuccess(user));\r\n  } catch (error) {\r\n    dispatch(getUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT, payload: null });\r\n  localStorage.clear();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}