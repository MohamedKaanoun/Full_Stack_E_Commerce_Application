name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Medokaanoun@2002
          POSTGRES_DB: e-commerce-application
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: 17

      - name: Start Docker Compose
        run: docker-compose up -d

      - name: Wait for Postgres to be ready
        run: |
          echo "Waiting for Postgres to be ready..."
          until docker exec postgres-sql-bsn pg_isready -U postgres; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run Unit Tests
        run: mvn -B test --file backend/pom.xml

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file backend/pom.xml

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm --prefix frontend install

      - name: Build project
        run: npm --prefix frontend run build

      - name: Run tests
        run: npm --prefix frontend test

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: docker-compose up -d --build
